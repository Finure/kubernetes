apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: logging
spec:
  chart:
    spec:
      chart: loki
      version: 6.30.1
      sourceRef:
        kind: HelmRepository
        name: loki
        namespace: logging
  interval: 1h0m0s
  values:
    serviceAccount:
      create: false
      name: loki
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      persistence:
        enabled: true
        storageClass: standard-rwo
        size: 10Gi
    loki:
      auth_enabled: false
      commonConfig:
        replication_factor: 1
      storage:
        type: filesystem
        object_store:
          type: gcs
          gcs:
            bucket_name: finure-loki
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: gcs
            schema: v13
            index:
              prefix: index_
              period: 24h
    chunksCache:
      enabled: false
    memcached:
      enabled: false
    memcachedExporter:
      enabled: false
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: logging
  annotations:
    iam.gke.io/gcp-service-account: loki-gcs@finure-465001.iam.gserviceaccount.com
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-clusterrole
  labels:
    app.kubernetes.io/name: loki
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-clusterrolebinding
  labels:
    app.kubernetes.io/name: loki
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-clusterrole
subjects:
  - kind: ServiceAccount
    name: loki
    namespace: logging
